# kubectl create ns giropops

# kubectl create ns strigus

# kubectl create ns girus

# kubectl label namespace strigus istio-injection=enabled

# kubectl label namespace giropops istio-injection=enabled

# cd istio-1.2.2/

# kubectl apply -f samples/httpbin/httpbin.yaml -n giropops

# kubectl apply -f samples/httpbin/httpbin.yaml -n strigus

# kubectl apply -f samples/httpbin/httpbin.yaml -n girus

# kubectl apply -f samples/sleep/sleep.yaml -n giropops

# kubectl apply -f samples/sleep/sleep.yaml -n strigus

# kubectl apply -f samples/sleep/sleep.yaml -n girus

# kubectl get pods --all-namespaces

# kubectl exec -ti -n strigus sleep-7d457d69b5-h8frp -- curl http://httpbin.giropops:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropopssleep-7d457d69b5-tw5pt -- curl http://httpbin.strigus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropops sleep-7d457d69b5-tw5pt -- curl http://httpbin.girus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl get policies.authentication.istio.io --all-namespaces

# kubectl get meshpolicies.authentication.istio.io --all-namespaces

# kubectl get destinationrules.networking.istio.io --all-namespaces -o yaml | grep "host:"

# kubectl apply -f meshpolicy.yaml

# kubectl exec -ti -n strigus sleep-7d457d69b5-h8frp -- curl http://httpbin.giropops:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropopssleep-7d457d69b5-tw5pt -- curl http://httpbin.strigus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropopssleep-7d457d69b5-tw5pt -- curl http://httpbin.girus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl apply -f destination-rule-meshpolicy.yaml

# kubectl exec -ti -n strigus sleep-7d457d69b5-h8frp -- curl http://httpbin.giropops:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropopssleep-7d457d69b5-tw5pt -- curl http://httpbin.strigus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n giropopssleep-7d457d69b5-tw5pt -- curl http://httpbin.girus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl apply -f destination-rule-fix-girus-conn.yaml

Limpando a casa após o exercício:

# kubectl delete meshpolicy default

# kubectl delete destinationrules httpbin-girus -n girus

# kubectl delete destinationrules api-server -n istio-system

# kubectl delete destinationrules default -n istio-system

# kubectl apply -f policy-enable-mtls-namespace.yaml

# for from in "giropops" "strigus"; do for to in "giropops" "strigus"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl "http://httpbin.${to}:8000/ip" -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done

# kubectl apply -f destination-rule-enable-mtls-namespace.yaml

# for from in "giropops" "strigus"; do for to in "giropops" "strigus"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl "http://httpbin.${to}:8000/ip" -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done

# for from in "giropops" "strigus" "girus"; do for to in "giropops" "strigus" "girus"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl "http://httpbin.${to}:8000/ip" -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done
HTML

# kubectl apply -f policy-enable-mtls-service.yaml


# for from in "giropops" "strigus" "girus"; do for to in "giropops" "strigus" "girus"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl "http://httpbin.${to}:8000/ip" -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done

# kubectl apply -f destination-rule-enable-mtls-service.yaml


# for from in "giropops" "strigus" "girus"; do for to in "giropops" "strigus" "girus"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl "http://httpbin.${to}:8000/ip" -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done

# kubectl  apply -f policy-enable-mtls-specific-service.yaml

# kubectl apply -f destination-rule-specific-service.yaml

# kubectl exec -ti -n girus sleep-7d457d69b5-sr5xw -- curl http://httpbin.strigus:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec -ti -n girus sleep-7d457d69b5-sr5xw -- curl http://httpbin.giropops:8000/ip -s -o /dev/null -w "%{http_code}\n"

# kubectl exec $(kubectl get pod -l app=sleep -n girus -o jsonpath={.items..metadata.name}) -c sleep -n girus -- curl http://httpbin.strigus:8000/ip -s -o /dev/null -w "%{http_code}\n"
HTML

Limpando a casa após o exercício:


# kubectl delete policy default -n giropops

# kubectl delete policy httpbin -n strigus

# kubectl delete destinationrules default -n giropops

# kubectl delete destinationrules httpbin -n strigus